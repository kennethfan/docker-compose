version: '3.3'
services:
  kafka0:
    container_name: kafka0 # 容器名称
    image: bitnami/kafka:3.5
    restart: always
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - TZ=Asia/Shanghai
      # 允许使用Kraft
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      # 定义kafka服务端socket监听端口（Docker内部的ip地址和端口）
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      # 定义安全协议
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      #定义外网访问地址（宿主机ip地址和端口）
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://172.16.0.2:9092
      - KAFKA_BROKER_ID=0
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_KRAFT_CLUSTER_ID=iZWRiSqjZAlYwlKEqHFQWI
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@172.16.0.2:9093,1@172.16.3:9093,2@172.16.0.4:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      # 设置broker最大内存，和初始内存
      - KAFKA_HEAP_OPTS=-Xmx512M -Xms256M
    volumes:
      - ./kafka0/data:/bitnami/kafka/data
      - ./kafka0/logs:/opt/bitnami/kafka/logs
    networks:
      extnetwork:
        ipv4_address: 172.16.0.2
  kafka1:
    container_name: kafka1 # 容器名称
    image: bitnami/kafka:3.5
    restart: always
    ports:
      - "19092:9092"
      - "19093:9093"
    environment:
      - TZ=Asia/Shanghai
      # 允许使用Kraft
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      # 定义kafka服务端socket监听端口（Docker内部的ip地址和端口）
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      # 定义安全协议
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      #定义外网访问地址（宿主机ip地址和端口）
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://172.16.0.3:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=iZWRiSqjZAlYwlKEqHFQWI
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@172.16.0.2:9093,1@172.16.3:9093,2@172.16.0.4:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      # 设置broker最大内存，和初始内存
      - KAFKA_HEAP_OPTS=-Xmx512M -Xms256M
    volumes:
      - ./kafka1/data:/bitnami/kafka/data
      - ./kafka1/logs:/opt/bitnami/kafka/logs
    networks:
      extnetwork:
        ipv4_address: 172.16.0.3
  kafka2:
    container_name: kafka2 # 容器名称
    image: bitnami/kafka:3.5
    restart: always
    ports:
      - "29092:9092"
      - "29093:9093"
    environment:
      - TZ=Asia/Shanghai
      # 允许使用Kraft
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      # 定义kafka服务端socket监听端口（Docker内部的ip地址和端口）
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      # 定义安全协议
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      #定义外网访问地址（宿主机ip地址和端口）
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://172.16.0.4:9092
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_KRAFT_CLUSTER_ID=iZWRiSqjZAlYwlKEqHFQWI
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@172.16.0.2:9093,1@172.16.3:9093,2@172.16.0.4:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      # 设置broker最大内存，和初始内存
      - KAFKA_HEAP_OPTS=-Xmx512M -Xms256M
    volumes:
      - ./kafka2/data:/bitnami/kafka/data
      - ./kafka2/logs:/opt/bitnami/kafka/logs
    networks:
      extnetwork:
        ipv4_address: 172.16.0.4
  
networks:
  extnetwork:
   ipam:
     config:
     - subnet: 172.16.0.0/16
